{"version":3,"sources":["components/NavBar.js","components/FilePane.js","components/Editor.js","components/LiveView.js","App.js","index.js"],"names":["NavBar","className","FilePane","props","useState","updateCurrentFile","changeCurrent","fileId","console","log","changeCurrentFile","onClick","Editor","currentFile","current","content","codeObject","rows","cols","onChange","event","target","value","combinedCode","handleChange","LiveView","toDisplay","parse","Container","styled","div","ContainerOutter","App","codeInput","updateCodeInput","fileContent","require","Fragment","fileChange","code","handleCodeChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0WAQeA,EAPA,WACX,OACI,qBAAKC,UAAY,MAAjB,iCCiBOC,EAjBE,SAACC,GACd,MAAyCC,mBAAS,GAAlD,mBAAoBC,GAApB,WACMC,EAAgB,SAACC,GACnBC,QAAQC,IAAIF,GACZJ,EAAMO,kBAAkBH,GACxBF,EAAkBE,IAEtB,OACI,qBAAKN,UAAY,YAAjB,SACI,qBAAIA,UAAY,YAAhB,UACI,oBAAIA,UAAY,YAAYU,QAAW,WAAOL,EAAc,IAA5D,wBACA,oBAAIL,UAAY,YAAYU,QAAW,WAAOL,EAAc,IAA5D,uBACA,oBAAIL,UAAY,YAAYU,QAAW,WAAOL,EAAc,IAA5D,4BCiBDM,EA9BA,SAACT,GACZ,IAAMU,EAAiC,IAAlBV,EAAMW,QAAiB,aAAkC,IAAlBX,EAAMW,QAAiB,YAAc,WAEjG,EAAuCV,mBADlB,CAAC,CAACW,QAAU,MAAM,CAACA,QAAU,MAAM,CAACA,QAAU,QACnE,mBAAOC,EAAP,UAmBA,OACI,sBAAKf,UAAY,cAAjB,UACA,2CAAcY,EAAd,IAA4B,IAA5B,OACA,0BAAUI,KAAO,KAAKC,KAAO,MAAMC,SArBlB,SAACC,GAClBZ,QAAQC,WAAWW,IACE,IAAlBjB,EAAMW,SAGmB,IAAlBX,EAAMW,SAGY,IAAlBX,EAAMW,WALZN,QAAQC,IAAIO,EAAWb,EAAMW,SAASC,SACtCC,EAAWb,EAAMW,SAASC,QAAUK,EAAMC,OAAOC,OAQrDd,QAAQC,IAAI,MAAMI,EAAY,IAAIG,MAUlC,wBAAQL,QARO,WACf,IAAMY,EAAeP,EAAW,GAAGD,QAAQC,EAAW,GAAGD,QAAQC,EAAW,GAAGD,QAC/EZ,EAAMqB,aAAaD,IAMnB,sB,eCjBOE,EATE,SAACtB,GACd,IAAMuB,EAAYvB,EAAMuB,UAExB,OACI,qBAAKzB,UAAY,YAAjB,SACC0B,YAAMD,MCATE,EAAYC,IAAOC,IAAV,kIAMTC,EAAkBF,IAAOC,IAAV,yJAiCNE,MA1Bf,WACE,MAAqC5B,mBAAS,IAA9C,mBAAO6B,EAAP,KAAkBC,EAAlB,KACA,EAAyC9B,mBAAS,GAAlD,mBAAOS,EAAP,KAAoBR,EAApB,KACI8B,EAAcC,EAAQ,IAK1B,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,IAAMA,SAAP,UACE,cAAC,EAAD,MAEF,cAAC,IAAMA,SAAP,UACE,eAACN,EAAD,WACE,eAACH,EAAD,WACE,cAAC,EAAD,CAAUd,QAAWD,EAAaH,kBAAmB,SAAC4B,GAAiBjC,EAAkBiC,GAAa9B,QAAQC,IAAI,WAAWI,MAC7H,cAAC,EAAD,CAAQC,QAAWD,EAAaW,aAAc,SAACe,GAAD,OAb/B,SAACA,GACxBL,EAAgBK,GAChBJ,EAAYtB,GAAaE,QAAUwB,EAW6BC,CAAiBD,IAAOxB,QAAWoB,EAAYtB,GAAaE,aAEtH,cAAC,EAAD,CAAUW,UAAaO,aCnCjCQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cb06ad2b.chunk.js","sourcesContent":["import './styles/style.css';\r\nconst NavBar = ()=>{\r\n    return(\r\n        <div className = \"nav\">\r\n            Online Code Editor\r\n        </div>    \r\n    );\r\n}\r\nexport default NavBar;","import './styles/style.css';\r\nimport { useState } from 'react';\r\n\r\nconst FilePane = (props)=>{\r\n    const [currentFile, updateCurrentFile] = useState(1);\r\n    const changeCurrent = (fileId) =>{\r\n        console.log(fileId);\r\n        props.changeCurrentFile(fileId);\r\n        updateCurrentFile(fileId);\r\n    };\r\n    return(\r\n        <div className = \"file-pane\">\r\n            <ul className = \"file-list\">\r\n                <li className = \"list-item\" onClick = {() => {changeCurrent(0)}}>index.html</li>\r\n                <li className = \"list-item\" onClick = {() => {changeCurrent(1)}}>index.css</li>\r\n                <li className = \"list-item\" onClick = {() => {changeCurrent(2)}}>index.js</li>\r\n            </ul>\r\n        </div>    \r\n    );\r\n}\r\nexport default FilePane;","import './styles/style.css';\r\nimport {useState} from 'react';\r\nconst Editor = (props) => {\r\n    const currentFile = (props.current === 0) ? \"index.html\" : (props.current === 1) ? \"index.css\" : \"index.js\" ;\r\n    const initialState = [{content : \"1@\"},{content : \"2@\"},{content : \"3@\"}];\r\n    const [codeObject, updateCodeObject] = useState(initialState);\r\n    const onTextChange = (event) => {\r\n        console.log(typeof(event));\r\n        if(props.current === 0){\r\n            console.log(codeObject[props.current].content);\r\n            codeObject[props.current].content = event.target.value;\r\n        } else if(props.current === 1){\r\n            console.log(codeObject[props.current].content);\r\n            codeObject[props.current].content = event.target.value;\r\n        } else if(props.current === 2){\r\n            console.log(codeObject[props.current].content);\r\n            codeObject[props.current].content = event.target.value;\r\n        }\r\n        console.log('At ',currentFile,' ',codeObject);\r\n    };\r\n    const onTextSave = () => {\r\n        const combinedCode = codeObject[0].content+codeObject[1].content+codeObject[2].content;\r\n        props.handleChange(combinedCode);\r\n    } \r\n    return ( \r\n        <div className = \"editor-main\">   \r\n        <div>Editing {currentFile} {'>'} </div>\r\n        <textarea rows = \"15\" cols = \"142\" onChange={onTextChange}></textarea>\r\n        <button onClick = {onTextSave}>Save</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Editor;","import './styles/style.css';\r\nimport parse from 'html-react-parser';\r\nconst LiveView = (props) => {\r\n    const toDisplay = props.toDisplay;\r\n\r\n    return (\r\n        <div className = \"live-view\">\r\n        {parse(toDisplay)}\r\n        </div>\r\n    );\r\n}\r\nexport default LiveView;","import NavBar from './components/NavBar';\nimport FilePane from './components/FilePane';\nimport Editor from './components/Editor';\nimport styled from 'styled-components';\nimport LiveView from './components/LiveView';\n\nimport React, {useState} from 'react';\nconst Container = styled.div`\n  display : flex;\n  flex-direction : row;\n  justify-content : space-between;\n  margin-top : 10px;\n`;\nconst ContainerOutter = styled.div`\n  display : flex;\n  flex-direction : column;\n  justify-content : space-between;\n  margin-top : 5px;\n  min-height: 100%;\n`;\nfunction App() {\n  const [codeInput, updateCodeInput] = useState(\"\");\n  const [currentFile, updateCurrentFile] = useState(0);\n  let fileContent = require('./userfiles/fileContent.json');\n  const handleCodeChange = (code) =>{\n    updateCodeInput(code);\n    fileContent[currentFile].content = code;\n  };\n  return (\n    <React.Fragment>\n      <React.Fragment>\n        <NavBar/>\n      </React.Fragment>\n      <React.Fragment>\n        <ContainerOutter>\n          <Container>\n            <FilePane current = {currentFile} changeCurrentFile={(fileChange) => { updateCurrentFile(fileChange); console.log('Editing ',currentFile);}} />\n            <Editor current = {currentFile} handleChange={(code) => handleCodeChange(code)} content = {fileContent[currentFile].content}/>\n          </Container>\n          <LiveView toDisplay = {codeInput}/>\n        </ContainerOutter>\n      </React.Fragment>\n    </React.Fragment>   \n  );  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n<link href=\"https://fonts.googleapis.com/css2?family=Ubuntu&display=swap\" rel=\"stylesheet\"></link>\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}